API: http://127.0.0.1:8000/profile/create/ - Creates new user account

Method: POST
Takes: 
{
    "username": "<email or username>",
    "password": "<password>",
}

Response:

New user created: Status code 201
{
    "username": "aquaware1@test.bg"
}


If user already exists: Status code 400
{
    "username": [
        "A user with that username already exists."
    ]
}


API: http://127.0.0.1:8000/profile/login/ Login user

Method: POST
Takes: 
{
    "username": "<email or username>",
    "password": "<password>",
}


Response:

User successfully logged in: Status code 200
{
    "token": "f3768e6996f537b0168cd82c8c22edd557548317"
}

If login failed: Status code 400
{
    "non_field_errors": [
        "Unable to log in with provided credentials."
    ]
}


API: http://127.0.0.1:8000/profile/details/ Profile details

Method: GET
Takes: 
No data

Response:

{
    "first_name": null,
    "last_name": null,
    "email": "",
    "client_number": "",
    "phone_number": null,
    "date_joined": "2024-05-17T09:31:41.411095Z",
    "profile_picture": null,
    "language": "BG"
}

Method: PUT
Takes: 
{
    "first_name": "Firstname",
    "last_name": "Lastname",
    "email": "email@email.com",
    "client_number": "123123",
    "phone_number": "0123456789",
    "date_joined": "2024-05-17T09:31:41.411095Z",
    "profile_picture": <file upload>,
    "language": "BG"
}


Response:

Profile successfully updated: Status code 200


Method: DELETE
Takes: 
No data


Response:

Profile successfully deleted: Status code 200


API: http://ec2-18-234-44-48.compute-1.amazonaws.com/facebook/login/

Method: POST

Takes :
{
    "access_token": "EAAGDK6W10D4BO3mZA0KTCjEcoW6QihWZAYXAGwbwx5CZCDlzcBcvjqqZBKTBYU15xKDml2CMnLSVDT3enTQSdQy110ruxSHVR63tokdiXuaZCJSma1dEUFTZAoZAa1lmV2oAGbZBq7hchGZCs2Kj0i9ZCvdBrzlZBw9G5ne5cjMnOwai7lhL0a1cBkvNAq0WFRSDGJf5aGZCB20E6RmR1ems9z12RuFExHVkMxIyOIQUjMha0enhsD3ZB1ZAUcEdo9JSLWKstbmAZDZD"
}

Response:
{
    "token": "af900fa3d2cfed70aebc1fe429a36c8ae9a1b96c",
    "user_id": 2
}


API: http://ec2-18-234-44-48.compute-1.amazonaws.com/email/report/

Metod: POST

Takes:

{
    "issue": "Leaking Pipe",
    "address": "123 Main St",
    "water_company_id": 1,
    "content": "Testing content"
}

Returns :

{
    "message": "Email sent successfully"
}



API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/water-companies/
Method: GET
Връща всички налични дружества

[
    {
        "id": 1,
        "name": "Тест ВИК",
        "phone_number": "088383838",
        "email": "svilen.b.petkov@gmail.com"
    }
]




API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/properties/
Method:GET
връща всички имоти на клиента със съответните данни:

[
    {
        "id": 1,
        "type": {
            "id": 2,
            "type": "Мезонет",
            "image": "http://ec2-18-234-44-48.compute-1.amazonaws.com/media/profile_pics/93f732ed873641b49449745ca9dac201.jpeg"
        },
        "num_people": 1,
        "client_number": {
            "id": 1,
            "client_number": "123456",
            "water_company": 1,
            "users": [
                1
            ]
        },
        "water_meters": [
            {
                "client_number": "123456",
                "meter_number": "12"
            },
            {
                "client_number": "123456",
                "meter_number": "13"
            }
        ]
    }
]


Method: POST:
Създава нов имот със съответните данни:

{
  "type": {
    "id": 1
  },
  "water_company": {
    "id": 1
  },
  "client_number": {
    "client_number": "9990000"
  },
  "property": {
    "num_people": 11
  },
  "water_meters": ["0000099"]
}

API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/properties/< property_id >/rooms/

MEthod: GET
Връща всички стай добавени към имота <property_id>

{
    "id": 1,
    "room_type": "KITCHEN",
    "name": "Main Kitchen"
}

Method: POST
добавя стая към имота

{
    "room_type": "KITCHEN",
    "name": "<Име на стаята подадена от клиента>"
}

!!!
room_type трябва да бъде едно от следните:

KITCHEN 
BATHROOM 
TOILET 
LAUNDRY 
GARDEN 
GARAGE 

!!!


API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/properties/< property_id >/rooms/ < room_id >/

Method: GET
Детайли за конкретната стая 

{
    "id": 1,
    "room_type": "GARAGE",
    "name": "Гараж"
}


Method: PUT
Промяна на данните 

{
    "room_type": "GARAGE",
    "name": "Гараж 1"
}

Method: DELETE
изтрива стаята 





API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/water-meter-readings/

Method: GET
Връща последните 5 самоотчета като може да са на различни имопти 

пример:

[
    {
        "id": 3,
        "water_meter_id": 2,
        "water_meter_number": "090909",
        "user": 2,
        "value": 43.123,
        "date": "2024-08-22T14:10:59.316716Z",
        "property_id": 2,
        "property_type": "House"
    },
    {
        "id": 2,
        "water_meter_id": 1,
        "water_meter_number": "5555",
        "user": 2,
        "value": 124.321,
        "date": "2024-08-22T14:09:16.315758Z",
        "property_id": 1,
        "property_type": "Apartment"
    },
    {
        "id": 1,
        "water_meter_id": 1,
        "water_meter_number": "5555",
        "user": 2,
        "value": 123.456,
        "date": "2024-08-22T10:00:22.050155Z",
        "property_id": 1,
        "property_type": "Apartment"
    }
]



Method: POST
Запазва данни за лист от водомери

{
    "readings": [
        {
            "meter_number": "< номер на водомер 1 >",
            "value": <int>
        },
        {
            "meter_number": "< номер на водомер 2 >",
            "value": <int>
        }
    ]
}







API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/client-numbers/
Method:GET
Returns all client numbers related to the logged user

[
    {
        "id": 1,
        "client_number": "99999",
        "water_company": 1,
        "users": [
            2
        ]
    },
    {
        "id": 2,
        "client_number": "88888",
        "water_company": 1,
        "users": [
            2
        ]
    }
]


Method: POST
Takes:

{
        "client_number": "99999",
        "water_company": <water_company_id>,
        "users": <user_id>
    },




API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/user-water-meters/

Method : GET

Returns all water meters related to the current user

{
        "client_number": "99999",
        "meter_number": "909090"
    }

Method: POST

Takes:

{
        "client_number": "<existing client number",
        "meter_number": "909090"
    }


~~~~~~~~~~~~~~~~~~~~~~

API : http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/water-meter-readings/<int:water-meter-reading-id>/

GET: Returns the details of the reading with the ID in the link
Example:

{
    "id": 13,
    "water_meter_id": 1,
    "user": 1,
    "value": 125,
    "date": "2024-07-29T10:29:29.566911Z"
}

PUT:

Takes new value 

Example:

{
    "value": 124
}

Response 
{
    "id": 13,
    "water_meter_id": 1,
    "user": 1,
    "value": 124,
    "date": "2024-07-29T10:29:29.566911Z"
}

DELETE: 

Deletes the reading from the DB


~~~~~~~~~~~~~~~~~~~~~

API : http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/client-numbers/<client_num-id>/average-consumption/

GET

Returns the average consumption of the client, based on the client-number (other fetures still in development)

Returns 

{
    "approximate": true,
    "average_monthly_consumption": 12.18,
    "num_people": 4,
    "average_usage_per_person_per_week": 0.761,
    "average_usage_per_room": {
        "main kitchen": 4.06,
        "Summer Kitchen": 4.06,
        "New added kitc": 4.06
    },
    "max_water_usage_for_property_per_month": 10400.0,
    "current_water_usage_for_person_per_room": 1.015
}

~~~~~~~~~~~~~~~~~~~~~~

API: http://ec2-18-234-44-48.compute-1.amazonaws.com/water-management/property-types/

GET: returns all available property types

example:

[
    {
        "id": 1,
        "type": "Apartment",
        "image": "http://ec2-18-234-44-48.compute-1.amazonaws.com/media/profile_pics/4b3157594b51401abf8e7877b4bf0b2d.jpeg"
    },
    {
        "id": 2,
        "type": "House",
        "image": "http://ec2-18-234-44-48.compute-1.amazonaws.com/media/profile_pics/6c6b8f277b0f4d04945e3b125d3501b2.jpeg"
    }
]

~~~~~~~~~~~~~~~~~~~~

API: http://ec2-18-234-44-48.compute-1.amazonaws.com/profile/deactivate/

POST: Deletes the account 

Takes 

{
    "password": "<password>",
}
~~~~~~~~~~~~~~~~~~~~

API: http://ec2-18-234-44-48.compute-1.amazonaws.com/profile/change-password/

POST:  

Takes 

{
    "old_password": "<password>",
    "new_password": "<new password>"
}


































Admin credentials for the Django admin panel: http://127.0.0.1:8000/admin/
user: aquaware_admin
pass: admin123
